package photo 

import (
	"github.com/theloosygoose/goserver/internal/types"
	"github.com/theloosygoose/goserver/internal/view/components"
    "github.com/theloosygoose/goserver/internal/view/layout"
    "fmt"
	"os"
    "strconv"
)


templ PhotoCard(photos []types.Photo) {
    @layout.Base(){
        @components.PhotoContainer() {
            for _, photo := range photos {
                <div class={"blur-load z-0 cursor-pointer hover:z-10 w-fit h-fit hover:scale-105 ease-in-out duration-200", min(&photo)}>
                    <img 
                    class="z-20 object-center object-cover max-w-32 max-h-32 md:max-w-52 md:max-h-52" 
                    loading="lazy"
                    src={ os.Getenv("PHOTO_DIR") + "sm_" + photo.Image.FileName } 
                alt={ photo.Name }
                hx-trigger="click"
                hx-target="#main-photo"
                hx-swap="innerHTML"
                hx-get={ fmt.Sprintf("/photodata/%d", photo.ID) }
                preload="mouseover" preload-images="true"
                />
                </div>
            }
        }
    }
}

templ MainPhoto(photo types.Photo){
    <div class={ "relative h-full md:h-fit w-fit md:w-auto group/mimage hover:shadow-lg transition duration-500 align-middle" + orientation(photo.Image) }>
        <div id="main-image-photo" class={"z-10 blur-load h-full", orientation(photo.Image), min(&photo)}>
            <img
                class="object-center object-contain"
                src={ os.Getenv("PHOTO_DIR") + "med_"+ photo.Image.FileName } 
                alt={ photo.Name }
            />
        </div>
        <div class="absolute bottom-0 left-0 z-20 align-middle 
        opacity-0 
        transition ease-in-out duration-200
        group-hover/mimage:opacity-90
        bg-primary flex-col h-fit *:text-md px-12 py-6 w-full">
            <p>{ photo.Name }</p>
            <p>{ photo.Location }</p>
            <p>{ photo.Date }</p>
            <p class="text-sm">{ photo.Description }</p>
        </div>
    </div>
}
 
css min(photo *types.Photo){
    background-image: { "url(\"" + templ.URL(os.Getenv("PHOTO_DIR") + "min_" + photo.Image.FileName ) + "\")"};
}

func orientation(image types.ImageData) string {
    h, err := strconv.Atoi(image.Height)
    if err != nil {
        fmt.Println(err)
        h = 0
    }

    w, err := strconv.Atoi(image.Width)
    if err != nil {
        fmt.Println(err)
        w = 0
    }

    if w > h {
        return "flex-col" 
    }

    return "flex" 
}
