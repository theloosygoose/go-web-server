package photo 

import (
    "fmt"
	"os"

	"github.com/theloosygoose/goserver/tools"
	"github.com/theloosygoose/goserver/internal/view/components"
    "github.com/theloosygoose/goserver/internal/view/layout"
)


templ PhotoCard(photos []tools.GetAllPhotosRow) {
    @layout.Base(){
        @components.PhotoContainer() {
            for _, photo := range photos {
                <div class={"blur-load z-0 cursor-pointer hover:z-10 w-fit h-fit hover:scale-105 ease-in-out duration-200", min(photo.Name)}>
                    <img 
                    class="z-20 object-center object-cover max-w-32 max-h-32 md:max-w-52 md:max-h-52" 
                    loading="lazy"
                    src={ os.Getenv("PHOTO_DIR") + "sm_" + photo.Imagepath} 
                alt={ photo.Name }
                hx-trigger="click"
                hx-target="#main-photo"
                hx-swap="innerHTML"
                hx-get={ fmt.Sprintf("/photodata/%d", photo.ID) }
                preload="mouseover" preload-images="true"
                />
                </div>
            }
        }
    }
}

templ MainPhoto(photo tools.GetPhotoByIdRow ){
    <div class={ "select-none md:w-auto group/mimage flex justify-center align-middle"}>
        <div id="main-image-photo" class={"flex justify-center align-middle z-10"}>
            <div class={"relative blur-load", min(photo.Name)}>
            <picture>
            </picture>
                <img
                    class="object-center object-contain w-auto max-h-[80svh]"
                    src={ os.Getenv("PHOTO_DIR") + "min_"+ photo.Imagepath} 
                    srcset={ 
                        os.Getenv("PHOTO_DIR") + "min_" + photo.Imagepath + " 2000w" + "," +
                        os.Getenv("PHOTO_DIR") + "med_" + photo.Imagepath + " 2500w"
                    }
                    sizes="(max-width:1500px) 2000px, 25000px"
                    alt={ photo.Name }
                    loading="eager"
                />
                <div class="absolute bottom-0 left-0 z-20 
                opacity-0 
                flex
                flex-col
                justify-center
                pt-4
                gap-y-2
                transition ease-in-out duration-200
                group-hover/mimage:opacity-90
                bg-gray-900 h-fit *:text-md px-12 py-6 w-full min-h-[30%]">
                    <p>{ photo.Name }</p>
                    <p>{ photo.Location }</p>
                    <p>{ photo.Date.String }</p>
                    <p class="text-sm">{ photo.Description.String }</p>
                </div>
            </div>
        </div>
    </div>
}
 
css min(imagepath string){
    background-image: { "url(\"" + templ.URL(os.Getenv("PHOTO_DIR") + "min_" + imagepath) + "\")"};
}
