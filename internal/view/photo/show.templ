package photo 

import (
	"github.com/theloosygoose/goserver/internal/types"
	"github.com/theloosygoose/goserver/internal/view/components"
    "fmt"
	"os"
)

templ PhotoCard(photos []types.Photo) {
	@components.PhotoContainer() {
		for _, photo := range photos {
			@components.Card() {
				<img 
                class="object-cover" 
                src={ os.Getenv("PHOTO_DIR") + photo.ImagePath } 
                alt={ photo.Name }
                hx-trigger="click"
                hx-target="#main-photo"
                hx-swap="innerHTML"
                hx-get={ fmt.Sprintf("/photodata/%d", photo.ID) }
                hx-indicator="#main-indicator"
                />
			}
		}
	}
}

templ MainPhoto(photo types.Photo){
    <div class="htmx-added:opacity-0 opacity-100 transition-opacity delay-150 duration-500 ease-in-out grid grid-cols-5 gap-4">
        <img src="dist/spinner.gif" class="htmx-indicator" id="main-indicator" /> 
        <img
            class={ "col-span-3 max-h-full", min(photo) }
            src={ os.Getenv("PHOTO_DIR") + photo.ImagePath } 
            alt={ photo.Name }
        />
        <div class="container flex-col h-full col-span-2">
            <p>Name: { photo.Name }</p>
            <p>Location: { photo.Location }</p>
            <p>Date: { photo.Date }</p>
            <p>Desc: This is a test description.  I will implment the data base thing later but for now this will do</p>
        </div>
    </div>
}

css min(min_path types.Photo){
    background-image: { "url(\"" + templ.URL(os.Getenv("PHOTO_DIR") + min_path.ImagePathMin) + "\")"};
}

