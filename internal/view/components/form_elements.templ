package components

import (
    "fmt"
    "github.com/theloosygoose/goserver/tools"
    "github.com/theloosygoose/goserver/internal/types"
)

templ FormCollectionCheckboxes(collections []types.CollectionChecked){
    <div class="flex flex-wrap text-white">
        for _, collection := range collections {
            <div>
                <input type="checkbox" id={ collection.Collection.Name + fmt.Sprint(collection.Collection.ID)} name={ collection.Collection.Name+ fmt.Sprint(collection.Collection.ID) } value={ collection.Value } />
                <label for={ collection.Collection.Name + fmt.Sprint(collection.Collection.ID)}>{ collection.Collection.Name }</label>
            </div>
        }
    </div>
}

templ Form(){
    <form 
    class="grid grid-cols-1 md:grid-cols-2 gap-6 align-top mt-12 *:block"
    id="form" 
    hx-encoding="multipart/form-data" 
    hx-target="#response-status" 
    hx-swap="innerHTML"
    hx-put="/addphoto" 
    hx-on::after-request="this.reset()">
        { children... }
    <button 
    class="w-fit h-fit px-5 py-2 rounded-sm col-start-1 bg-gray-800
    relative focus:ring-0 text-center 
    transition-colors duration-150
    text-white
    hover:bg-gray-900
    inline-flex items-center"
    type="submit">
    Upload
        <span class="htmx-indicator absolute -top-1 -right-1 flex h-3 w-3">
          <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-accent opacity-75"></span>
          <span class="relative inline-flex rounded-full h-3 w-3 bg-accent"></span>
        </span>
    </button>
    </form>
}

templ FormName(value string){
        <label 
        class="col-start-1"
        for="name-input">
            <span>Name</span>
            <input 
            class="w-full border-0 border-b-2 border-accent focus:ring-0 focus:border-b-4 bg-gray-800 rounded-md
            invalid:border-red-500 invalid:text-red-600"
            type="text" name="name" id="name-input" value={value} required/>
        </label>
}

templ FormLocation(value string){
    <label 
    class="col-start-1"
    for="location-input">
        <span>Location</span>
        <input 
        class="w-full block border-0 border-b-2 border-accent focus:ring-0 focus:border-b-4 bg-gray-800 rounded-md"
        type="text" name="location" id="location-input" />
    </label>
}

templ FormDescription(value string){
    <label 
    class="col-start-1"
    for="description-input">
        <span>Description</span>
        <textarea 
        class="w-full block border-0 border-b-2 border-accent focus:ring-0 focus:border-b-4 bg-gray-800 rounded-md"
        rows="5" name="description" id="description-input"></textarea>
    </label>
}

templ FormImageInput(path string){
    <label 
    class="md:col-start-2 md:row-start-1 md:row-span-1"
    for="imagefile-input">
        <input 
        class="w-full block border-0 border-accent focus:ring-0
        file:transition-colors file:duration-150
        file:focus:ring-0 file:border-0
        file:hover:cursor-pointer
        file:hover:bg-gray-800
        file:px-5 file:py-2 file:rounded-sm 
        file:bg-gray-900 file:text-center
        file:text-white
        file:hover:invalid:bg-red-700
        file:invalid:border-red-500 file:invalid:bg-red-600"
        type="file" name="imageFile" id="imagefile-input" accept="image/*" onchange="loadFile(event)" required/>
    </label>
}

templ FormImagePreview(value string){
    <div class="md:col-start-2 md:row-start-2 md:row-span-2">
        if value == ""{
            <img class="max-h-56 mx-auto" id="preview-image" height="300px"/>
        } else {
            <img class="max-h-56 mx-auto" id="preview-image" height="300px" src={ "images/min_" + value }/>
        }
    </div>
}
